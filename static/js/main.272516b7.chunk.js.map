{"version":3,"sources":["SongList.js","SongOverview.js","App.js","reportWebVitals.js","index.js"],"names":["SongList","props","AllSongs","songs","map","item","style","width","className","artist","track","genre","rating","id","SongOverview","emptyList","setState","state","addSong","bind","handleChange","handleArtist","handleTrack","deleteItem","e","preventDefault","newSongs","this","target","name","value","Date","now","console","log","key","filteredSongs","filter","onSubmit","type","onChange","placeholder","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.272516b7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction SongList(props) {\r\n     \r\n    const songs = props.songs;\r\n    const AllSongs = songs.map((item) => {\r\n\r\n    return <div key={item.id}>\r\n                <table style={{ width: \"100%\" }}>\r\n                    <th className=\"song-row__item\" >{item.artist}</th>\r\n                    <th className=\"song-row__item\">{item.track}</th>\r\n                    <th className=\"song-row__item\">{item.genre}</th>\r\n                    <th className=\"song-row__item\">{item.rating}</th>   \r\n                </table>\r\n            </div>})\r\n \r\n    return (\r\n        \r\n    <li>{AllSongs} </li> \r\n)}\r\n\r\n\r\nexport default SongList\r\n\r\n","import React from 'react'\r\n// import SongForm from './components/SongForm'\r\nimport SongList from './SongList'\r\n\r\n\r\nclass SongOverview extends React.Component {\r\n  \r\n  constructor() {\r\n    super()\r\n    this.state =\r\n    {\r\n      songs: [{\r\n     id:'',\r\n        artist: 'Artist:',\r\n        track: 'Song:',\r\n        genre: 'Genre:',\r\n        rating: 'Rating:'\r\n      }\r\n\r\n      ],\r\n\r\n      \r\n    }\r\n\r\n    this.addSong = this.addSong.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleArtist = this.handleArtist.bind(this)\r\n    this.handleTrack= this.handleTrack.bind(this)\r\n    this.deleteItem = this.deleteItem(this)\r\n\r\n  }\r\n  \r\naddSong(e) {\r\n    e.preventDefault();\r\n\r\n    const newSongs = this.state\r\n    if (newSongs.artist !== '') {\r\n      const songs = [...this.state.songs, newSongs]\r\n      this.setState({\r\n        songs: songs,\r\n          artist: '',\r\n          track:'',\r\n          genre: '',\r\n          rating: ''\r\n      })\r\n    }\r\n}\r\n\r\nhandleChange(e) {\r\n    e.preventDefault();\r\n      this.setState({\r\n          [e.target.name]: e.target.value  \r\n      })\r\n}\r\n  \r\nhandleArtist(e) {\r\n      e.preventDefault();\r\n        this.setState({\r\n          artist: e.target.value,\r\n          id:Date.now() \r\n        })\r\n      console.log(this.state)\r\n}\r\n\r\nhandleTrack(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      track: e.target.value, \r\n    }) \r\n}\r\n     \r\ndeleteItem(key) {\r\n       const filteredSongs = this.state.songs.filter(item => item.key !== key);\r\n         this.setState({\r\n           songs: filteredSongs\r\n         })                \r\n}\r\n\r\n  \r\nemptyList = () => {\r\n       const emptyList = [{\r\n                id:'',\r\n                artist: 'Artist',\r\n                track: 'Song',\r\n                genre: 'Genre',\r\n                rating: 'Rating'\r\n              }]\r\n          this.setState({\r\n                songs: emptyList,\r\n                   })\r\n    return\r\n    \r\n  }\r\n\r\nrender() {\r\n      \r\n      return (\r\n        <div className=\"totalDiv\">\r\n      \r\n          <form onSubmit={this.addSong} >\r\n                <input type=\"text\" name=\"artist\" value={this.state.artist}\r\n                  onChange={this.handleArtist}\r\n                  placeholder=\"type artist name\" className=\"formLayer\">\r\n                  \r\n                        </input>\r\n                <input type=\"text\" name=\"track\" value={this.state.track}\r\n                  onChange={this.handleTrack}\r\n                  placeholder=\"type track name\" className=\"formLayer\">\r\n                  \r\n                        </input>\r\n                <label>genre:</label>\r\n                      <select name=\"genre\" onChange={this.handleChange}\r\n                        value={this.state.genre} className=\"formLayer\">\r\n                              <option value=\"---\">?</option>\r\n                              <option value=\"Jazz\">Jazz</option>\r\n                              <option value=\"Electro\">Electro</option>\r\n                              <option value=\"Grunge\">Grunge</option> \r\n                              <option value=\"Classic\">Klassiek</option>\r\n                              <option value=\"Funky\">Funk</option>\r\n                              <option value=\"Ambient\">Ambient</option>\r\n                              <option value=\"Hip-Hop\">Hip-Hop</option>\r\n                              <option value=\"Lo-Fi\">Lo-Fi</option>\r\n                      </select>\r\n                <label>rating: </label>\r\n                      <select name=\"rating\" onChange={this.handleChange}\r\n                        value={this.state.rating} className=\"formLayer\">\r\n                              <option value=\"?\">?</option>\r\n                              <option value=\"Awesome\"> 1 </option>\r\n                              <option value=\"Unreal\"> 2 </option>\r\n                              <option value=\"Excellent\"> 3 </option>\r\n                              <option value=\"Crazy\"> 4 </option>\r\n                              <option value=\"Unbelievable\"> 5 </option>\r\n                              <option value=\"Out of this wolrd\"> 6 </option>\r\n                              <option value=\"Irresponsible\"> 7 </option>\r\n                              <option value=\"Sick\"> 8 </option>\r\n                      </select>\r\n                \r\n                <button type=\"submit\" >Add to list</button>\r\n                    \r\n          </form>     \r\n    <ul>\r\n            < SongList songs={this.state.songs}\r\n              deleteItem={this.deleteItem}\r\n              addSong={this.addSong}/>\r\n     \r\n    </ul>\r\n          <button onClick={this.emptyList}>\r\n        Empty list?\r\n      </button>\r\n             \r\n              </div>)}\r\n           \r\n    \r\n  } \r\n  \r\n  export default SongOverview;","\nimport SongOverview from \"./SongOverview\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <SongOverview/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}